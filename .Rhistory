setwd("D:/Studie/urban_sprawl_group6")
inroot <- "D:/Studie/urban_sprawl_group6/results_final" # change/omit as needed
deter15 <- readGDAL("perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected") # deterministic run
library(sp)
library(rgdal)
library(gstat)
library(rgeos)
inroot <- "D:/Studie/urban_sprawl_group6/results_final" # change/omit as needed
deter15 <- readGDAL("perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected") # deterministic run
inroot <- "D:/Studie/urban_sprawl_group6/results_final" # change/omit as needed
# deter15 <- readGDAL("perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected") # deterministic run
# Read all model results into a matrix "fr"
flist <- list.files(inroot) # all file names in directory
inroot <- "D:/Studie/urban_sprawl_group6/results_final" # change/omit as needed
# deter15 <- readGDAL("perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected") # deterministic run
# Read all model results into a matrix "fr"
flist <- list.files(inroot) # all file names in directory
flist <- flist[grep("_corrected", flist)] # only retain corrected
fr = numeric()
for(in_name in flist)
{
in_name <- paste0(inroot, in_name)
fr <- cbind(fr,(readGDAL(in_name, silent = TRUE))$band1)
}
for(in_name in flist)
{
in_name <- paste0(inroot, in_name)
fr <- cbind(fr,(readGDAL(in_name, silent = TRUE))$band1)
}
inroot <- "D:/Studie/urban_sprawl_group6/results_final" # change/omit as needed
# deter15 <- readGDAL("perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected") # deterministic run
# Read all model results into a matrix "fr"
flist <- list.files(inroot) # all file names in directory
flist <- flist[grep("_corrected", flist)] # only retain corrected
fr = numeric()
for(in_name in flist)
{
in_name <- paste0(inroot, in_name)
fr <- cbind(fr,(readGDAL(in_name, silent = TRUE))$band1)
}
inroot <- "D:/Studie/urban_sprawl_group6/results_final" # change/omit as needed
# deter15 <- readGDAL("perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected") # deterministic run
# Read all model results into a matrix "fr"
flist <- list.files(inroot) # all file names in directory
flist <- flist[grep("_corrected", flist)] # only retain corrected
fr = numeric()
view(flist)
flist
in_name <- "perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected"
in_name <- paste0(inroot, in_name)
import(in_name)
readGDAL(in_name)
in_name <- "perc_builtup_15_fixed_normal-distribution_run_1_corrected.asc"
in_name <- paste0(inroot, in_name)
readGDAL(in_name)
in_name <- "D:/Studie/urban_sprawl_group6/results_final/perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected"
readGDAL(in_name, silent = TRUE)
for(in_name in flist)
{
in_name <- paste0(inroot, in_name)
fr <- cbind(fr,(readGDAL(in_name, silent = TRUE))$band1)
}
?paste0
in_name <- paste0(inroot, "perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected")
readGDAL(in_name, silent = TRUE)
in_name
inroot <- "D:/Studie/urban_sprawl_group6/results_final/" # change/omit as needed
# deter15 <- readGDAL("perc_builtup_15_fixed_normal-distribution_run_1.asc_corrected") # deterministic run
# Read all model results into a matrix "fr"
flist <- list.files(inroot) # all file names in directory
flist <- flist[grep("_corrected", flist)] # only retain corrected
fr = numeric()
for(in_name in flist)
{
in_name <- paste0(inroot, in_name)
fr <- cbind(fr,(readGDAL(in_name, silent = TRUE))$band1)
}
fr[is.na(fr)] <- 0 # set NA to 0
View(fr)
prob <- apply(fr, 1, function(x) mean(ifelse(x > 25, 1, 0)))
prob <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(prob))
inroot <- "D:/Studie/urban_sprawl_group6/results_final/" # change/omit as needed
deter15 <- readGDAL(paste0(inroot, "perc_builtup_15_deterministic.asc_corrected")) # deterministic run
prob <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(prob))
spplot(prob, col.regions=bpy.colors())
mean_grid <- apply(fr, 1, function(x) mean())
mean_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(mean_grid))
spplot(prob, col.regions=bpy.colors())
stdev_grid <- apply(fr, 1, function(x) sd())
stdev_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(stdev_grid))
spplot(prob, col.regions=bpy.colors())
library(gstat)
mean_grid <- apply(fr, 1, function(x) mean())
mean_grid <- apply(fr, 1, function(x) mean(x))
mean_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(mean_grid))
spplot(prob, col.regions=bpy.colors())
stdev_grid <- apply(fr, 1, function(x) sd(x))
stdev_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(stdev_grid))
spplot(prob, col.regions=bpy.colors())
spplot(mean_grid, col.regions=bpy.colors())
spplot(stdev_grid, col.regions=bpy.colors())
unc_hom[is.na(unc_hom)] <- 0 # set NA to 0
unc_hom = numeric()
unc_norm = numeric()
fix_norm = numeric()
for(in_name in flist)
{
in_name <- paste0(inroot, in_name)
if (grepl("fixed_normal-distribution", in_name, fixed=TRUE)) {
fix_norm <- cbind(fix_norm,(readGDAL(in_name, silent = TRUE))$band1)
}
else if (grepl("uncertain_homogeneous", in_name, fixed=TRUE)) {
unc_hom <- cbind(unc_hom,(readGDAL(in_name, silent = TRUE))$band1)
}
else if (grepl("uncertain_normal-distribution", in_name, fixed=TRUE)) {
unc_norm <- cbind(unc_norm,(readGDAL(in_name, silent = TRUE))$band1)
}
}
unc_hom[is.na(unc_hom)] <- 0 # set NA to 0
unc_norm[is.na(unc_norm)] <- 0 # set NA to 0
fix_norm[is.na(fix_norm)] <- 0 # set NA to 0
mean_func <- function(data) {
mean_grid <- apply(data, 1, function(x) mean(x))
mean_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(mean_grid))
spplot(mean_grid, col.regions=bpy.colors())
return(mean_grid)
}
stdev_func <- function(data) {
stdev_grid <- apply(data, 1, function(x) sd(x))
stdev_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(stdev_grid))
spplot(stdev_grid, col.regions=bpy.colors())
return(stdev_grid)
}
mean_unc_hom <- mean_func(unc_hom)
mean_unc_norm <- mean_func(unc_norm)
mean_fix_norm <- mean_func(fix_norm)
stdev_unc_hom <- stdev_func(unc_hom)
stdev_unc_norm <- stdev_func(unc_norm)
stdev_fix_norm <- stdev_func(fix_norm)
mean_unc_hom <- mean_func(unc_hom)
mean_unc_hom <- mean_func(unc_hom)
spplot(mean_unc_hom, col.regions=bpy.colors())
mean_unc_hom <- mean_func(unc_hom)
spplot(mean_unc_hom, col.regions=bpy.colors())
mean_unc_norm <- mean_func(unc_norm)
spplot(mean_unc_norm, col.regions=bpy.colors())
mean_fix_norm <- mean_func(fix_norm)
spplot(mean_fix_norm, col.regions=bpy.colors())
stdev_unc_hom <- stdev_func(unc_hom)
spplot(stdev_unc_hom, col.regions=bpy.colors())
stdev_unc_norm <- stdev_func(unc_norm)
spplot(stdev_unc_norm, col.regions=bpy.colors())
stdev_fix_norm <- stdev_func(fix_norm)
spplot(stdev_fix_norm, col.regions=bpy.colors())
mean_unc_hom <- mean_func(unc_hom)
spplot(mean_unc_hom, col.regions=bpy.colors(), main = "plot mean uncertain homogeneous")
mean_unc_norm <- mean_func(unc_norm)
spplot(mean_unc_norm, col.regions=bpy.colors(), main = "plot mean uncertain normal-dist")
mean_fix_norm <- mean_func(fix_norm)
spplot(mean_fix_norm, col.regions=bpy.colors(), main = "plot mean fixed normal-dist")
stdev_unc_hom <- stdev_func(unc_hom)
spplot(stdev_unc_hom, col.regions=bpy.colors(), main = "plot stdev uncertain homogeneous")
stdev_unc_norm <- stdev_func(unc_norm)
spplot(stdev_unc_norm, col.regions=bpy.colors(), main = "plot stdev uncertain normal-dist")
stdev_fix_norm <- stdev_func(fix_norm)
spplot(stdev_fix_norm, col.regions=bpy.colors(), main = "plot stdev fixed normal-dist")
mean_func <- function(data) {
mean_grid <- apply(data, 1, function(x) mean(x))
mean_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(mean_grid))
spplot(mean_grid, col.regions=bpy.colors())
return(mean_grid)
}
var_func <- function(data) {
var_grid <- apply(data, 1, function(x) var(x))
var_grid <- SpatialPixelsDataFrame(coordinates(deter15),
as.data.frame(var_grid))
spplot(var_grid, col.regions=bpy.colors())
return(var_grid)
}
mean_unc_hom <- mean_func(unc_hom)
spplot(mean_unc_hom, col.regions=bpy.colors(), main = "plot mean uncertain homogeneous")
mean_unc_norm <- mean_func(unc_norm)
spplot(mean_unc_norm, col.regions=bpy.colors(), main = "plot mean uncertain normal-dist")
mean_fix_norm <- mean_func(fix_norm)
spplot(mean_fix_norm, col.regions=bpy.colors(), main = "plot mean fixed normal-dist")
var_unc_hom <- var_func(unc_hom)
spplot(var_unc_hom, col.regions=bpy.colors(), main = "plot var uncertain homogeneous")
var_unc_norm <- var_func(unc_norm)
spplot(var_unc_norm, col.regions=bpy.colors(), main = "plot var uncertain normal-dist")
var_fix_norm <- var_func(fix_norm)
spplot(var_fix_norm, col.regions=bpy.colors(), main = "plot var fixed normal-dist")
terrain_contrib <- 100 * ((1 - var_unc_hom) / var_unc_norm)
spplot(terrain_contrib, col.regions=bpy.colors(), main = "plot terrain contribution %")
pop_contrib <- 100 * ((1 - var_fix_norm) / var_unc_norm)
spplot(pop_contrib, col.regions=bpy.colors(), main = "plot population contribution %")
